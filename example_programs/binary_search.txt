func binarySearch(ent arr[], ent size, ent key) -> ent {
    ent low = 0, mid, high = size - 1;
    ent res = -1;

    mientras low <= high {
        mid = low + (high - low) / 2;

        si arr[mid] == key {
            res = mid;
            parar;
        }
        
        si arr[mid] < key {
            low = mid + 1;
        } sino {
            high = mid - 1;
        }
    }

    regresar res;
}

func principal() -> ent {
    ent array[] = {2, 3, 4, 10, 40};
    ent size = 0, key = 10;

    por ent n en array {
        size += 1;
    }

    ent res = binarySearch(array, size, key);

    si res == -1 {
        imprimir("Elemento no encontrado\n");
    } sino {
        imprimir("Elemento encontrado en la posicion ", res, "\n");
    }

    regresar 0;
}